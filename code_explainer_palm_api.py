# -*- coding: utf-8 -*-
"""code_explainer_PaLM-API.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HXFVhgnuRI1VjZHe4ljk2fEQ5J3HDD1d

## Setup Environment
"""

!pip install google-generativeai

import google.generativeai as palm
import os

"""To get started, you'll need to [create an API key](https://developers.generativeai.google/tutorials/setup)."""

#@title Insert PaLM API Key here
palm.configure(api_key='INSERT_KEY_HERE')

# Use the palm.list_models function to find available models
# PaLM 2 available in 4 sizes: Gecko, Otter, Bison and Unicorn (largest)
# https://developers.generativeai.google/models/language

models = [m for m in palm.list_models() if 'generateText' in m.supported_generation_methods]
model = models[0].name
print(model)

"""## Simplest Chatbot"""

# Set your input text
prompt = "Why is the sky blue?"
# prompt = "What is Quantum Computing? Explain like I'm 5."

completion = palm.generate_text(
    model=model,
    prompt=prompt,
    temperature=0,
    # temperature=0 >> more deterministic results // temperature=1 >> more randomness
    max_output_tokens=100
    # maximum length of response
)

print(completion.result)

"""## Custom AI Applications

### Code Explainer
"""

def get_completion(prompt):
  completion = palm.generate_text(
      model=model,
      prompt=prompt,
      temperature=0,
      # The maximum length of the response
      max_output_tokens=500,
      )
  response = completion.result
  return response

"""#### Simple Prompting"""

# input_code = f"""
# x = [1, 2, 3, 4, 5]
# y = [i**2 for i in x if i%2 == 0]
# print(y)
# """

input_code = f"""
def my_func(x):
    if x > 5:
        return "High"
    else:
        return "Low"
result = my_func(4) + my_func(6) + my_func(4)
print(result)
"""

prompt =f"""
Your task is to act as a Python Code Explainer.
I'll give you a Code Snippet.
Your job is to explain the Code Snippet step-by-step.
Also, compute the final output of the code.
Code Snippet is shared below, delimited with triple backticks:
```
{input_code}
```
"""

print(prompt)

print(get_completion(prompt))

"""#### Effective Prompting"""

python_code_examples = f"""
---------------------
Example 1: Code Snippet
x = 10
def foo():
    global x
    x = 5
foo()
print(x)

Correct answer: 5
Explanation: Inside the foo function, the global keyword is used to modify the global variable x to be 5.
So, print(x) outside the function prints the modified value, which is 5.
---------------------
Example 2: Code Snippet
def modify_list(input_list):
    input_list.append(4)
    input_list = [1, 2, 3]
my_list = [0]
modify_list(my_list)
print(my_list)

Correct answer: [0, 4]
Explanation: Inside the modify_list function, an element 4 is appended to input_list.
Then, input_list is reassigned to a new list [1, 2, 3], but this change doesn't affect the original list.
So, print(my_list) outputs [0, 4].
---------------------
"""

# language = "Python"

# input_code = f"""
# def my_func(x):
#     if x > 5:
#         return "High"
#     else:
#         return "Low"
# result = my_func(4) + my_func(6) + my_func(4)
# print(result)
# """

input_code = f"""
def func(x):
    if x > 0:
        return x + func(x-1)
    return 0

result = func(5)
print(result)
"""

cprompt = f"""
Your task is to act as a Python Code Explainer.
I'll give you a Code Snippet.
Your job is to explain the Code Snippet step-by-step.
Break down the code into as many steps as possible.
Share intermediate checkpoints along with results.
State your Steps and Checkpoints in your output.
Few good examples of Python code output between #### separator:
####
{python_code_examples}
####
Code Snippet is shared below, delimited with triple backticks:
```
{input_code}
```
"""

print(prompt)

print(get_completion(prompt))

"""### Code Explainer Tool App"""

!pip install gradio

#@title Gradio App
import gradio as gr
import os
import google.generativeai as palm

# load model
# PaLM API Key here
palm.configure(api_key='INSERT_KEY_HERE')


# define completion function
def get_completion(code_snippet):

  python_code_examples = f"""
  ---------------------
  Example 1: Code Snippet
  x = 10
  def foo():
      global x
      x = 5
  foo()
  print(x)
  Correct output: 5
  Code Explanation: Inside the foo function, the global keyword is used to modify the global variable x to be 5.
  So, print(x) outside the function prints the modified value, which is 5.
  ---------------------
  Example 2: Code Snippet
  def modify_list(input_list):
      input_list.append(4)
      input_list = [1, 2, 3]
  my_list = [0]
  modify_list(my_list)
  print(my_list)
  Correct output: [0, 4]
  Code Explanation: Inside the modify_list function, an element 4 is appended to input_list.
  Then, input_list is reassigned to a new list [1, 2, 3], but this change doesn't affect the original list.
  So, print(my_list) outputs [0, 4].
  ---------------------
  """

  prompt = f"""
  Your task is to act as a Python Code Explainer.
  I'll give you a Code Snippet.
  Your job is to explain the Code Snippet step-by-step.
  Break down the code into as many steps as possible.
  Share intermediate checkpoints & steps along with results.
  Few good examples of Python code output between #### separator:
  ####
  {python_code_examples}
  ####
  Code Snippet is shared below, delimited with triple backticks:
  ```
  {code_snippet}
  ```
  """

  completion = palm.generate_text(
      model=model,
      prompt=prompt,
      temperature=0,
      # The maximum length of the response
      max_output_tokens=500,
      )
  response = completion.result
  return response

# define app UI
iface = gr.Interface(fn=get_completion, inputs=[gr.Textbox(label="Insert Code Snippet",lines=5)],
                    outputs=[gr.Textbox(label="Explanation Here",lines=5)],
                    title="Python Code Explainer"
                    )

iface.launch(share=True)

iface.close()